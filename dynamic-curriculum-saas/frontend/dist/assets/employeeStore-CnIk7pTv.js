import{z as n,A as h}from"./index-DyemIcl1.js";const l={createEmployee(e){return n.post("/employees",e)},getEmployees(){return n.get("/employees")},getEmployeeById(e){return n.get(`/employees/${e}`)},updateEmployee(e,r){return n.put(`/employees/${e}`,r)},deleteEmployee(e){return n.delete(`/employees/${e}`)}},i={generateOrUpdatePath(e){return n.post(`/learning-paths/employee/${e}/generate`)},getLearningPathForEmployee(e){return n.get(`/learning-paths/employee/${e}`)},curateLearningPath(e,r){return n.put(`/learning-paths/${e}`,r)},updateStepStatus(e,r,a){return n.patch(`/learning-paths/${e}/step/${r}`,{completed:a})}},m=h("employee",{state:()=>({employees:[],currentEmployee:null,isLoading:!1,error:null}),actions:{async fetchEmployees(){var e,r;this.isLoading=!0,this.error=null;try{const a=await l.getEmployees();this.employees=a.data}catch(a){this.error=((r=(e=a.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to fetch employees",console.error("EmployeeStore fetchEmployees error:",a)}finally{this.isLoading=!1}},async fetchEmployeeById(e){var r,a;this.isLoading=!0,this.error=null,this.currentEmployee=null;try{const t=await l.getEmployeeById(e);return this.currentEmployee=t.data,this.currentEmployee}catch(t){this.error=((a=(r=t.response)==null?void 0:r.data)==null?void 0:a.message)||"Failed to fetch employee details",console.error("EmployeeStore fetchEmployeeById error:",t)}finally{this.isLoading=!1}},async addEmployee(e){var r,a;this.isLoading=!0,this.error=null;try{const t=await l.createEmployee(e);return this.employees.push(t.data),t.data}catch(t){throw this.error=((a=(r=t.response)==null?void 0:r.data)==null?void 0:a.message)||"Failed to add employee",console.error("EmployeeStore addEmployee error:",t),t}finally{this.isLoading=!1}},async updateEmployee(e,r){var a,t;this.isLoading=!0,this.error=null;try{const s=await l.updateEmployee(e,r),o=this.employees.findIndex(p=>p.id===e);return o!==-1&&(this.employees[o]=s.data),this.currentEmployee&&this.currentEmployee.id===e&&(this.currentEmployee=s.data),s.data}catch(s){throw this.error=((t=(a=s.response)==null?void 0:a.data)==null?void 0:t.message)||"Failed to update employee",console.error("EmployeeStore updateEmployee error:",s),s}finally{this.isLoading=!1}},async deleteEmployee(e){var r,a;this.isLoading=!0,this.error=null;try{return await l.deleteEmployee(e),this.employees=this.employees.filter(t=>t.id!==e),this.currentEmployee&&this.currentEmployee.id===e&&(this.currentEmployee=null),!0}catch(t){return this.error=((a=(r=t.response)==null?void 0:r.data)==null?void 0:a.message)||"Failed to delete employee",console.error("EmployeeStore deleteEmployee error:",t),!1}finally{this.isLoading=!1}},async generateLearningPathForEmployee(e){var r,a;this.isLoading=!0,this.error=null;try{const t=await i.generateOrUpdatePath(e);if(this.currentEmployee&&this.currentEmployee.id===e)this.currentEmployee.learningPath=t.data;else{const s=this.employees.findIndex(o=>o.id===e);s!==-1&&(this.employees[s].learningPath=t.data)}return t.data}catch(t){throw this.error=((a=(r=t.response)==null?void 0:r.data)==null?void 0:a.message)||"Failed to generate learning path",console.error("EmployeeStore generateLearningPath error:",t),t}finally{this.isLoading=!1}},async curatePath(e,r){var a,t;this.isLoading=!0,this.error=null;try{const s=await i.curateLearningPath(e,r);return this.currentEmployee&&this.currentEmployee.learningPath&&this.currentEmployee.learningPath.id===e&&(this.currentEmployee.learningPath=s.data),s.data}catch(s){throw this.error=((t=(a=s.response)==null?void 0:a.data)==null?void 0:t.message)||"Failed to curate learning path",console.error("EmployeeStore curatePath error:",s),s}finally{this.isLoading=!1}},async updatePathStepStatus(e,r,a){var t,s;this.isLoading=!0,this.error=null;try{const o=await i.updateStepStatus(e,r,a);return this.currentEmployee&&this.currentEmployee.learningPath&&this.currentEmployee.learningPath.id===e&&(this.currentEmployee.learningPath=o.data),o.data}catch(o){throw this.error=((s=(t=o.response)==null?void 0:t.data)==null?void 0:s.message)||"Failed to update step status",console.error("EmployeeStore updatePathStepStatus error:",o),o}finally{this.isLoading=!1}}}});export{i as l,m as u};
